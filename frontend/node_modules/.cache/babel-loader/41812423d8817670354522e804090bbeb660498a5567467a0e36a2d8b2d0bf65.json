{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\Desktop\\\\blog-cms\\\\frontend\\\\src\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentForm({\n  postId,\n  onCommentAdded\n}) {\n  _s();\n  const [comment, setComment] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await fetch('http://localhost/backend/api/add_comment.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          post_id: postId,\n          comment_text: comment\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        setComment('');\n        if (onCommentAdded) onCommentAdded();\n      } else {\n        setError(data.error || 'Failed to add comment');\n      }\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      placeholder: \"Add a comment...\",\n      required: true,\n      rows: 2,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentForm, \"gwSwwTAxuePM7W3f93wc6NfdjiA=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CommentForm","postId","onCommentAdded","_s","comment","setComment","error","setError","handleSubmit","e","preventDefault","res","fetch","method","headers","credentials","body","JSON","stringify","post_id","comment_text","data","json","success","err","onSubmit","style","marginTop","children","value","onChange","target","placeholder","required","rows","width","fileName","_jsxFileName","lineNumber","columnNumber","type","color","_c","$RefreshReg$"],"sources":["C:/Users/darre/Desktop/blog-cms/frontend/src/components/CommentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CommentForm({ postId, onCommentAdded }) {\r\n  const [comment, setComment] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const res = await fetch('http://localhost/backend/api/add_comment.php', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ post_id: postId, comment_text: comment }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setComment('');\r\n        if (onCommentAdded) onCommentAdded();\r\n      } else {\r\n        setError(data.error || 'Failed to add comment');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{marginTop: 10}}>\r\n      <textarea\r\n        value={comment}\r\n        onChange={e => setComment(e.target.value)}\r\n        placeholder=\"Add a comment...\"\r\n        required\r\n        rows={2}\r\n        style={{width: '100%'}}\r\n      />\r\n      <br />\r\n      <button type=\"submit\">Post Comment</button>\r\n      {error && <div style={{color: 'red'}}>{error}</div>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CommentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAElB,MAAM;UAAEmB,YAAY,EAAEhB;QAAQ,CAAC;MACjE,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBlB,UAAU,CAAC,EAAE,CAAC;QACd,IAAIH,cAAc,EAAEA,cAAc,CAAC,CAAC;MACtC,CAAC,MAAM;QACLK,QAAQ,CAACc,IAAI,CAACf,KAAK,IAAI,uBAAuB,CAAC;MACjD;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZjB,QAAQ,CAAC,eAAe,CAAC;IAC3B;EACF,CAAC;EAED,oBACER,OAAA;IAAM0B,QAAQ,EAAEjB,YAAa;IAACkB,KAAK,EAAE;MAACC,SAAS,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACnD7B,OAAA;MACE8B,KAAK,EAAEzB,OAAQ;MACf0B,QAAQ,EAAErB,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,kBAAkB;MAC9BC,QAAQ;MACRC,IAAI,EAAE,CAAE;MACRR,KAAK,EAAE;QAACS,KAAK,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxC,OAAA;MAAQyC,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAC;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1CjC,KAAK,iBAAIP,OAAA;MAAK2B,KAAK,EAAE;QAACe,KAAK,EAAE;MAAK,CAAE;MAAAb,QAAA,EAAEtB;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEX;AAACpC,EAAA,CAzCQH,WAAW;AAAA0C,EAAA,GAAX1C,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}