{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\Desktop\\\\blog-cms\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshComments, setRefreshComments] = useState({});\n  useEffect(() => {\n    fetch('http://localhost/backend/api/posts.php').then(res => res.json()).then(data => {\n      setPosts(data);\n      setLoading(false);\n    });\n  }, []);\n  const handleCommentAdded = postId => {\n    setRefreshComments(prev => ({\n      ...prev,\n      [postId]: (prev[postId] || 0) + 1\n    }));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (posts.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No posts found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        margin: '10px 0',\n        padding: 10,\n        borderRadius: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"By \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }, this), \" | Category: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.category || 'Uncategorized'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 51\n          }, this), \" | \", new Date(post.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content.length > 200 ? post.content.slice(0, 200) + '...' : post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n        postId: post.id,\n        refresh: refreshComments[post.id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        postId: post.id,\n        onCommentAdded: () => handleCommentAdded(post.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"nmEJRPS/McRpUODmTvnX13xApN8=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","CommentForm","CommentList","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","loading","setLoading","refreshComments","setRefreshComments","fetch","then","res","json","data","handleCommentAdded","postId","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","style","border","margin","padding","borderRadius","title","author","category","Date","created_at","toLocaleString","content","slice","id","refresh","onCommentAdded","_c","$RefreshReg$"],"sources":["C:/Users/darre/Desktop/blog-cms/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CommentForm from './CommentForm';\r\nimport CommentList from './CommentList';\r\n\r\nfunction PostList() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshComments, setRefreshComments] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost/backend/api/posts.php')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setPosts(data);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleCommentAdded = (postId) => {\r\n    setRefreshComments(prev => ({ ...prev, [postId]: (prev[postId] || 0) + 1 }));\r\n  };\r\n\r\n  if (loading) return <div>Loading posts...</div>;\r\n  if (posts.length === 0) return <div>No posts found.</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blog Posts</h2>\r\n      {posts.map(post => (\r\n        <div key={post.id} style={{border: '1px solid #ccc', margin: '10px 0', padding: 10, borderRadius: 6}}>\r\n          <h3>{post.title}</h3>\r\n          <div>\r\n            <small>\r\n              By <b>{post.author}</b> | Category: <b>{post.category || 'Uncategorized'}</b> | {new Date(post.created_at).toLocaleString()}\r\n            </small>\r\n          </div>\r\n          <p>{post.content.length > 200 ? post.content.slice(0, 200) + '...' : post.content}</p>\r\n          <CommentList postId={post.id} refresh={refreshComments[post.id]} />\r\n          <CommentForm postId={post.id} onCommentAdded={() => handleCommentAdded(post.id)} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}