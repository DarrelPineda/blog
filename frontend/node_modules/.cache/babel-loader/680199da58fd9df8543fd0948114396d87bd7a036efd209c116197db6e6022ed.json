{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\Desktop\\\\blog-cms\\\\frontend\\\\src\\\\components\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList({\n  postId\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [error, setError] = useState('');\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost/backend/api/get_comments.php?post_id=${postId}`).then(res => res.json()).then(data => setComments(data));\n  }, [postId, refresh]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await fetch('http://localhost/backend/api/add_comment.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          post_id: postId,\n          comment_text: commentText\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        setCommentText('');\n        setRefresh(r => !r); // Refresh comments\n      } else {\n        setError(data.error || 'Failed to add comment');\n      }\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        paddingLeft: 20\n      },\n      children: [comments.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: c.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \": \", c.comment_text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: '#888'\n          },\n          children: new Date(c.created_at).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)), comments.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          color: '#888'\n        },\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginTop: 8,\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        required: true,\n        style: {\n          width: '70%',\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error\",\n        style: {\n          marginLeft: 8\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentList, \"TxNuavHhbdeJdCkRp6u21FLgWLc=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CommentList","postId","_s","comments","setComments","commentText","setCommentText","error","setError","refresh","setRefresh","fetch","then","res","json","data","handleSubmit","e","preventDefault","method","headers","credentials","body","JSON","stringify","post_id","comment_text","success","r","err","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","map","c","username","color","Date","created_at","toLocaleString","id","length","onSubmit","display","alignItems","type","placeholder","value","onChange","target","required","width","marginRight","className","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/darre/Desktop/blog-cms/frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction CommentList({ postId }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [commentText, setCommentText] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost/backend/api/get_comments.php?post_id=${postId}`)\r\n      .then(res => res.json())\r\n      .then(data => setComments(data));\r\n  }, [postId, refresh]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const res = await fetch('http://localhost/backend/api/add_comment.php', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ post_id: postId, comment_text: commentText }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setCommentText('');\r\n        setRefresh(r => !r); // Refresh comments\r\n      } else {\r\n        setError(data.error || 'Failed to add comment');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop: 16}}>\r\n      <b>Comments:</b>\r\n      <ul style={{paddingLeft: 20}}>\r\n        {comments.map(c => (\r\n          <li key={c.id}>\r\n            <b>{c.username}</b>: {c.comment_text}\r\n            <br />\r\n            <small style={{color:'#888'}}>{new Date(c.created_at).toLocaleString()}</small>\r\n          </li>\r\n        ))}\r\n        {comments.length === 0 && <li style={{color:'#888'}}>No comments yet.</li>}\r\n      </ul>\r\n      <form onSubmit={handleSubmit} style={{marginTop: 8, display: 'flex', alignItems: 'center'}}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment...\"\r\n          value={commentText}\r\n          onChange={e => setCommentText(e.target.value)}\r\n          required\r\n          style={{width: '70%', marginRight: 8}}\r\n        />\r\n        <button type=\"submit\">Post</button>\r\n        {error && <div className=\"auth-error\" style={{marginLeft: 8}}>{error}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}